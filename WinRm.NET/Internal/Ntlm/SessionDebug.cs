namespace WinRm.NET.Internal.Ntlm
{
    using System;
    using System.Text;
    using System.Threading.Tasks;
    using global::Kerberos.NET.Entities;

    public class SessionDebug
    {
        //private const string Negotiate = "TlRMTVNTUAABAAAAtYIIYgAAAAAAAAAAAAAAAAAAAAAKAPRlAAAADw==";
        //private const string Challenge = "TlRMTVNTUAACAAAAFAAUADgAAAA1goliqJMITb+s2ncAAAAAAAAAAKQApABMAAAACgB8TwAAAA9EAEEATgBWAE0AQwBMAE8AVQBEAAIAFABEAEEATgBWAE0AQwBMAE8AVQBEAAEAFABPAFAALQBBAEcARQBOAFQALQAyAAQAFgBkAGEAbgAuAHYAbQBjAGwAbwB1AGQAAwAsAG8AcAAtAGEAZwBlAG4AdAAtADIALgBkAGEAbgAuAHYAbQBjAGwAbwB1AGQABQAWAGQAYQBuAC4AdgBtAGMAbABvAHUAZAAHAAgAhuxgBljW2wEAAAAA";
        //private const string Authenticate_Me = "TlRMTVNTUAADAAAAGAAYAJAAAAD0APQAqAAAAAAAAABYAAAAKgAqAFgAAAAOAA4AggAAABAAEACcAQAANYKIYgoA9GUAAAAPZm410aHolN0dwLTZ6MGSXGMAYgBhAHQAdAAtAGEAZABtAEAARABBAE4ALgBWAE0AQwBMAE8AVQBEAEMATwBEAFkALQBQADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVEfrmS7zF/k8k1ywPBwdGAEBAAAAAAAAhuxgBljW2wFjc5ZKhCc80gAAAAACABQARABBAE4AVgBNAEMATABPAFUARAABABQATwBQAC0AQQBHAEUATgBUAC0AMgAEABYAZABhAG4ALgB2AG0AYwBsAG8AdQBkAAMALABvAHAALQBhAGcAZQBuAHQALQAyAC4AZABhAG4ALgB2AG0AYwBsAG8AdQBkAAUAFgBkAGEAbgAuAHYAbQBjAGwAbwB1AGQABwAIAIbsYAZY1tsBBgAEAAIAAAAKABAAAAAAAAAAAAAAAAAAAAAAAAkAAAAAAAAAAAAAADw0ZFMzvLvpukNTR3F+kSw=";
        //private const string Authenticate_Ms = "TlRMTVNTUAADAAAAGAAYAJAAAABeAV4BqAAAAAAAAABYAAAAKgAqAFgAAAAOAA4AggAAABAAEAAGAgAANYKI4goA9GUAAAAPHfSx5+yJRezCSrwSVhyy9WMAYgBhAHQAdAAtAGEAZABtAEAARABBAE4ALgBWAE0AQwBMAE8AVQBEAEMATwBEAFkALQBQADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiZofIA+WZ7j3XcOLg09YfQEBAAAAAAAAUwOpYFjW2wHzFw/jpE3XYwAAAAACABQARABBAE4AVgBNAEMATABPAFUARAABABQATwBQAC0AQQBHAEUATgBUAC0AMgAEABYAZABhAG4ALgB2AG0AYwBsAG8AdQBkAAMALABvAHAALQBhAGcAZQBuAHQALQAyAC4AZABhAG4ALgB2AG0AYwBsAG8AdQBkAAUAFgBkAGEAbgAuAHYAbQBjAGwAbwB1AGQABwAIAFMDqWBY1tsBBgAEAAIAAAAIADAAMAAAAAAAAAABAAAAACAAAFq+FR2C8qTxBm9L7nDMCpbpaJyx3FuPhN9aX8LWJTs0CgAQAAAAAAAAAAAAAAAAAAAAAAAJADYASABPAFMAVAAvAG8AcAAtAGEAZwBlAG4AdAAtADIALgBkAGEAbgAuAHYAbQBjAGwAbwB1AGQAAAAAAAAAAADRSVvuvILiEIr3pIYhopsr";
        //private const string Payload_Me = "1000000001000000588c76db1c424d8300000000d23201a654ec900d6b8cea2c3335fc61a6a53e9806bc98157179c5e96d3d84b0c119b2dab19796c554d99788b49cc37db1af32a80cd3d76a703ab914154646ece106fb0d937d1acc464f6daee3e9e92aa3006a25dab4e5dc0674a5c5f099ddd88af8dc23e369a10125d00267a050cf5613a78c48b2c071290d99c3dc0e3bad72e5dd04aebb76f983a6e6132ad52057536a2aeaadbb563fc27cb8944e509ffe6eb472b80b2d70ff9e6d05a081d61aaf6e21b480be858fbe7a0a98084030d52941f09c6018b86ae489f188433ec2ffaaaa2c722335d34a69ff58b1a5892fe51a5132c3a8c81e4fb9fed322ad1b58a8ceecaa0cb3ad07e6b8c57bd6f73f48bd6d03297863499b3bdee7408cdc1bf918a9c79f31699def9f989e3d53525274a4180e63ccbf43500fe9a791f2e3fbba8a02bec7d6c23a69a151ff16dfd31996d5c16cf05b2862915067616cd5686d0a0e127dae2c421f74ef7e1bc8b9ce8e67c63aa16f6a23ea199f63c6d732c20d7e78ebc29d4396b30f0472478f7f314ae2d8e6171beb16dbfa347db3d36c41b8f7f6fcef9d0e51f3a3339209c7ee12150faf3eec7e812c7b530da65f865ddf875797753802181108e45004d727c6e359909c0971d20ca6032d6f0de8ee82ebd818b7062915288dcbd1e64f32ef06451e6e81d3c173dcec577b8199c15ad9b1dc2cdafaecf02a05c997a7af96236cf2d3f66659f86654daa094157144c5ab769e9fc514d8d45b1870dd672832371e29a35d967ebc4b52edfcf1bcce43bbb99266bcd422bfae252b9ebf2f9e1605f285d88cb1e3a280ac08c7a042f181fff17c0fe0713434c795034275fde2b6b4ccd16f8924f69a9cf45b441f183194628c986e0730656f37fafc844d04a452ae448230bcb9712af9fe1bd92ef782aba58cff31b99710094bc257ab786c874cad7af81f839f490650af0505f537fa4b0062aecc4b95c382c7ca9ceb663f59b320b07a8df4ba0455b9bf6983c326e522d17b7da7dbe7f8c39a6bb900de9bb2b2921895fc9e980c1783cf980da9779074cf2a1e5d8e9446902a5a551eb831a582f797b7e48024ee408ee73b0b61200d52d548b4f8c6f75656f74fddf877f67df22426a88e725115ea1f0fa33b75f0b20838fc35a56a93127f5b848332c2d6cb57ad72a4258fd54de33eee220feabc13271685464686309fac2acdbbe307bf1f84c81ebdb548444785e1bf6358b2a3d11d8e1725b20bfccafb36c128e8f76a5d256dfd6419f5bdffdd077c4874a4266a33abc6b372fcbb4d8099acceee7fb21fddc35a54274d9d2a3dbc7c4b6582a8d98c85e749bf99105398e44a3a365efd69a888509ca53b0dcc72f190c650e49b3b271d42783942c291464b1818892fde43e2d010e28cc6e11cb1f4cadc4d7e126c48497fe02fbe1009ac0b0d8ab5480dde447f2ac8c8fc5e5c890898c79f5a6dcc075fdaaae40c2d22a4123d2bede543316bad88a4736fce4374c606562873052d1e322ac5abbdafabf202c065ffd81525616f4c33fac3c05dc0b072d87d8a241c36666d9be9b267eeefe5505e48377adc063ddc0ce61e4482984ad9349225792d31111d264044888ce3745aab6b8afd4bdd9bdb07dd81e51fc7cf646c469bfcd8524ec8131e1a85dea36f6847a2aa7d2ad84a405fa9f2f951dbec6382aadf35210d446ecf94a1d1eda12940a2fd9c2c7a17497010686490df2003491950d7fdb715e43f7a6806308b17de061e3a5ca5ebd2fa59ad70ff6e68f5d7a14f8488ffa608e2b50253a6847aebf39f60b4ecec9a8a203d92fa6145a687051db52ace37338dc48e79e581a0a55e2ae98dd970a2d8841432ecc270a8b96e7e3011bd182d7d649fa0309ce37a86a81bd584e8c335cc11d060d85dbd6e29332508d77efcd932d20f1ae7b00b50584b649d0be92735d19f45021eae7f36840d4bfa77f8093f3d5dd5c0ec2122af17d2759f4f326d8ce08fe888163323d6769672069eb92532bca75f28ef3c792e525e909bc7c0117370c6cd2aefda940fd5b7f94f981236dd43e91445450e001caa57b6a6106123202a";
        //private const string Payload_Ms = "";
        //private const string Password = "root4EDMZ";

        public static Task Debug(string b64Authenticate, string password, ReadOnlyMemory<byte> payload)
        {
            var authenticateMessage = Convert.FromBase64String(b64Authenticate);
            var authenticate = new NtlmAuthenticate(authenticateMessage);
            var credentials = new Credentials(authenticate.UserName, authenticate.DomainName, password);
            var responseKeyNt = NtlmCrypto.ResponseKeyNt(credentials);

            ReadOnlyMemory<byte> challengeFromClient;
            NtChallengeResponse ntChallengeResponse;
            if (authenticate.NtChallengeResponse.Length > 0x0018)
            {
                ntChallengeResponse = new NtChallengeResponse(authenticate.NtChallengeResponse);
                challengeFromClient = ntChallengeResponse.ClientChallenge.ChallengeFromClient;
            }
            else
            {
                throw new InvalidOperationException("Only NTLMv2 is supported.");
            }

            var ntProofStr = ntChallengeResponse.NtProofStr;
            var sessionBaseKey = NtlmCrypto.SessionBaseKey(responseKeyNt, ntProofStr);
            var kexkey = NtlmCrypto.KXKEY(authenticate.NegotiationFlags, sessionBaseKey);

            ReadOnlyMemory<byte> exportedSessionKey;
            if (authenticate.NegotiationFlags.HasFlag(NtlmNegotiateFlag.NTLMSSP_NEGOTIATE_KEY_EXCH) &&
                (authenticate.NegotiationFlags.HasFlag(NtlmNegotiateFlag.NTLMSSP_NEGOTIATE_SIGN) ||
                 authenticate.NegotiationFlags.HasFlag(NtlmNegotiateFlag.NTLMSSP_NEGOTIATE_SEAL)))
            {
                exportedSessionKey = NtlmCrypto.RC4KRandomSessionKey(kexkey, authenticate.EncryptedRandomSessionKey);
            }
            else
            {
                throw new InvalidDataException("Only signed / sealed messages are supported");
            }

            var clientSealingKey = NtlmCrypto.ComputeKey(exportedSessionKey, client: true, signing: false);
            var clientSigningKey = NtlmCrypto.ComputeKey(exportedSessionKey, client: true, signing: true);

            var serverSealingKey = NtlmCrypto.ComputeKey(exportedSessionKey, client: false, signing: false);
            var serverSigningKey = NtlmCrypto.ComputeKey(exportedSessionKey, client: false, signing: true);

            Console.WriteLine($"session key: {Convert.ToHexString(exportedSessionKey.Span)}");
            Console.WriteLine($"client sign: {Convert.ToHexString(clientSigningKey.Span)}");
            Console.WriteLine($"server sign: {Convert.ToHexString(serverSigningKey.Span)}");
            Console.WriteLine($"client seal: {Convert.ToHexString(clientSealingKey.Span)}");
            Console.WriteLine($"server seal: {Convert.ToHexString(serverSealingKey.Span)}");

            var encryptor = new NtlmEncryptor(clientSealingKey, serverSealingKey, clientSigningKey, serverSigningKey);
            var headerLength = BitConverter.ToInt32(payload.Span);
            var headerBytes = payload.Slice(4, headerLength);
            ReadOnlySpan<byte> stuffToDecrypt = payload.Slice(4 + headerLength).Span;
            Console.WriteLine($"decrypting: {stuffToDecrypt.Slice(0, 10).ToHexString()} ... {stuffToDecrypt.Slice(stuffToDecrypt.Length - 10).ToHexString()}");
            var decrypted = encryptor.Client.Transform(stuffToDecrypt);
            var str = Encoding.UTF8.GetString(decrypted.Span);
            Console.WriteLine(str);

            return Task.CompletedTask;
        }
    }
}
